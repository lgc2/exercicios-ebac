{
	"info": {
		"_postman_id": "e654d543-7de3-45ed-8cd1-e1ac40563bae",
		"name": "exercMod13",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Listar usuários",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{local1}}usuarios/",
					"host": [
						"{{local1}}usuarios"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Cadastrar Usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code 201 quando tiver sucesso na criação\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Mensagem sucesso na criação\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code 400 quando E-mail já for cadastrado\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Mensagem de aviso sobre E-mail já estar sendo utilizado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nome\": \"Lgc2\",\r\n  \"email\": \"luiz@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local1}}usuarios",
					"host": [
						"{{local1}}usuarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Buscar usuário por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code 200 quando o ID estiver correto\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Validar ID no body da resposta\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"0uxuPY0cbmQhpEz1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code 400 quando o ID for inexistente\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"ID de usuário inexistente\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Usuário não encontrado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{local1}}usuarios/0uxuPY0cbmQhpEz1",
					"host": [
						"{{local1}}usuarios"
					],
					"path": [
						"0uxuPY0cbmQhpEz1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Excluir usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code é 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Validar registro excluído com sucesso\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Registro excluído com sucesso\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validar não exclusão devido ao ID inexistente\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Nenhum registro excluído\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{local1}}usuarios/zBCa8clWBuiTi7tL",
					"host": [
						"{{local1}}usuarios"
					],
					"path": [
						"zBCa8clWBuiTi7tL"
					]
				}
			},
			"response": []
		},
		{
			"name": "Editar usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar status code 200 quando edição for realizada com sucesso\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Mensagem validando que edição foi feita com sucesso\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Registro alterado com sucesso\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validar status code 201 quando ID for inexistente e um novo cadastro for realizado\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Mensagem validando novo cadastro quando ID for inexistente e E-mail for válido\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Cadastro realizado com sucesso\");\r",
							"});\r",
							"\r",
							"pm.test(\"Validar status code 400 quando ID for inexistente e E-mail já for cadastrado\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Mensagem de aviso sobre E-mail já cadastrado\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Este email já está sendo usado\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n    \"nome\": \"Este é o ADM\",\r\n    \"email\": \"fulanoooOooOoooo@qa.com\",\r\n    \"password\": \"teste\",\r\n    \"administrador\": \"false\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{local1}}usuarios/0uxuPY0cbmQhpEz",
					"host": [
						"{{local1}}usuarios"
					],
					"path": [
						"0uxuPY0cbmQhpEz"
					]
				}
			},
			"response": []
		}
	]
}